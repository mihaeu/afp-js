#!/usr/bin/env node
'use strict';

const fs = require('fs');

fs.readdir('./code-samples/src', (err, files) => {

  // fetch all the code
  var code = "", codeSamples = [], currentSample = "", spaces = 0;
  files.forEach(file => code += fs.readFileSync('./code-samples/src/' + file, 'utf8'));

  // extract code samples
  code.split("\n").forEach(line => {
    if (line.match(/.*\/\/ @sample start: .+/) !== null) {
      currentSample = line.replace(/.*\/\/ @sample start: (.+)/, '$1');
      spaces = line.replace(/(.*)\/\/ @sample start: .+/, '$1').length;
      codeSamples[currentSample] = '';
    } else if (line.match(/.*\/\/ @sample end: .+/) !== null) {
      currentSample = "";
    } else if (currentSample !== "") {
      codeSamples[currentSample] += line.slice(spaces) + "\n";
    }
  });

  // replace code samples in the template
  var presentation = fs.readFileSync('template.html', 'utf8')
    .split("\n")
    .map(line => line.replace(/\/\/ @sample: (\S+)/, (string, match) => {
      if (codeSamples[match] == undefined) {
        throw new Error('There\'s no code sample that matches ' + string);
      }
      return codeSamples[match];
    })
  ).join("\n");
  process.stdout.write(presentation);
});